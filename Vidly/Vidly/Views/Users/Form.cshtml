@model Vidly.ViewModels.UserFormViewModel

@{
	ViewBag.Title = string.IsNullOrWhiteSpace(Model.User?.Id) ? "New User" : $"Edit {Model.User?.UserName}";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Save", "Users", FormMethod.Post, new { role = "form", id = "user-form" }))
{
	@Html.ValidationSummary(true, "Please fix the following errors")
	@Html.AntiForgeryToken()

	if (Model.User == null)
	{
		@Html.Hidden(nameof(Model.User.Id), null)

		<h4><b>User Name</b></h4>
		<div class="form-group">
			@Html.TextBoxFor(model => model.User.UserName, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.User.UserName)
		</div>

		<h4><b>Password</b></h4>
		<div class="form-group">
			@Html.LabelFor(model => model.Password)
			@Html.PasswordFor(model => model.Password, new { @class = "form-control", required = "required" })
			@Html.ValidationMessageFor(model => model.Password)
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.ConfirmedPassword)
			@Html.PasswordFor(model => model.ConfirmedPassword, new { @class = "form-control", required = "required" })
			@Html.ValidationMessageFor(model => model.ConfirmedPassword)
		</div>
	}
	else
	{
		@Html.HiddenFor(model => model.User.Id)
		@Html.HiddenFor(model => model.User.UserName)
	}

	<h4><b>Identification</b></h4>
	<div class="form-group">
		@Html.LabelFor(model => model.User.FiscalNumber)
		@Html.TextBoxFor(model => model.User.FiscalNumber, new { @class = "form-control" })
		@Html.ValidationMessageFor(model => model.User.FiscalNumber)
	</div>

	<h4><b>Contacts</b></h4>
	<div class="form-group">
		@Html.LabelFor(model => model.User.Email)
		@Html.TextBoxFor(model => model.User.Email, new { @class = "form-control" })
		@Html.ValidationMessageFor(model => model.User.Email)
	</div>
	<div class="checkbox">
		<label>
			@Html.CheckBoxFor(model => model.User.EmailConfirmed, new { @class = "checkbox" }) Email Confirmed?
		</label>
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.User.PhoneNumber)
		<div class="col-md-12 p-0">
			@Html.TextBox("phone-number", this.Model?.User?.PhoneNumber ?? string.Empty, new { @class = "form-control", data_val_required = "The Phone Number field is required." })
			@Html.HiddenFor(m => m.User.PhoneNumber)
		</div>
		<div class="col-md-12 p-0">
			@Html.ValidationMessageFor(m => m.User.PhoneNumber)
		</div>
	</div>
	<div class="checkbox">
		<label>
			@Html.CheckBoxFor(model => model.User.PhoneNumberConfirmed, new { @class = "checkbox" }) Phone Confirmed?
		</label>
	</div>

	<h4><b>Authentication</b></h4>
	<div class="checkbox">
		<label>
			@Html.CheckBoxFor(model => model.User.TwoFactorEnabled, new { @class = "checkbox" }) Two Factor Enabled?
		</label>
	</div>

	<h4><b>Roles</b></h4>
	<div class="form-group">
		@foreach (string role in Model.AvailableRoles)
		{
			<div class="checkbox">
				<label>
					<input type="checkbox" name="@nameof(Model.UserRoles)" value="@role" @(Model.UserRoles != null && Model.UserRoles.Contains(role) ? "checked" : string.Empty) /> @role
				</label>
			</div>
		}
	</div>

	<button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
	<script src="/Content/Static/js/phonenumber.min.js"></script>
	<script>
		$(document).ready(function ()
		{
			// Initialize the input
			phoneNumberModule.initializePhoneNumberInput('phone-number', 'User.PhoneNumber');
		});
	</script>
}