@using Vidly.ViewModels

@model IEnumerable<UserViewModel>

@{
	ViewBag.Title = "Users";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<table id="users" class="table table-bordered table-hover">
	<thead>
		<tr>
			<th>User</th>
			<th>Fiscal Number</th>
			<th>Email</th>
			<th>Phone Number</th>
			<th>Two Factor?</th>
			<th>Roles</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var viewModel in Model)
		{
			<tr>
				<td>
					<a href="@Url.Action("Details", "Users", new {id = viewModel.User.Id})">@viewModel.User.UserName</a>
				</td>
				<td>
					@viewModel.User.FiscalNumber
				</td>
				<td class="@(viewModel.User.EmailConfirmed ? "confirmed-contact" : "unconfirmed-contact")">
					<span data-toggle="tooltip" title="The email is @(viewModel.User.EmailConfirmed ? "confirmed" : "unconfirmed").">@viewModel.User.Email</span>
				</td>
				<td class="@(viewModel.User.PhoneNumberConfirmed ? "confirmed-contact" : "unconfirmed-contact")">
					<span data-toggle="tooltip" title="The phone number is @(viewModel.User.PhoneNumberConfirmed ? "confirmed" : "unconfirmed")." id="phone-number">@viewModel.User.PhoneNumber</span>
				</td>
				<td class="@(viewModel.User.LockoutEndDateUtc == null ? "confirmed-contact" : "unconfirmed-contact")">
					<span data-toggle="tooltip" title="@(viewModel.User.LockoutEndDateUtc == null ? "Unlocked" : $"Locked until {viewModel.User.LockoutEndDateUtc}").">@(viewModel.User.TwoFactorEnabled ? "Enabled" : "Disabled")</span>
				</td>
				<td>
					@string.Join(", ", viewModel.UserRoles)
				</td>
			</tr>
		}
	</tbody>
</table>

@section scripts
{
	<script src="/Content/Static/js/index.min.js"></script>
	<script src="/Content/Static/js/phonenumber.min.js"></script>
	<script>
		/* global jQuery: false, $: false */
		$(document).ready(function ()
		{
			const columns =
				[
					{
						render: function (data, type, user)
						{
							return `<a href='/users/details/${user.id}'>${user.userName}</a>`;
						}
					},
					{
						data: "fiscalNumber"
					},
					{
						render: function (data, type, user)
						{
							var span = "<span class='confirmed-contact' data-toggle='tooltip' title='The email is ";

							if (user.emailConfirmed)
								span += "confirmed";
							else
								span += "unconfirmed";

							span += (`'>${user.email}</span>`);

							return span;
						}
					},
					{
						render: function (data, type, user)
						{
							var span = "<span class='confirmed-contact' data-toggle='tooltip' title='The phone number is ";

							if (user.phoneNumberConfirmed)
								span += "confirmed";
							else
								span += "unconfirmed";

							span += (`'>${user.phoneNumber}</span>`);

							return span;
						}
					},
					{
						render: function (data, type, user)
						{
							if (user.twoFactorEnabled)
							{
								return "<span class='confirmed-contact'>Enabled</span>";
							}
							else
							{
								return "<span class='unconfirmed-contact'>Disabled</span>";
							}
						}
					},
					{
						data: "roles"
					}
				];

			const completeFunction = function ()
			{
				phoneNumberModule.initializePhoneNumberInput('phone-number');
			}

			// Initialize the table
			indexModule.initializeIndex('user', 'User', '/api/users/', columns, completeFunction);
		});
	</script>
}